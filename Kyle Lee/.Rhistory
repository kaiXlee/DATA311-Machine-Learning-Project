MSE = mean((prediction-job_test$depress2)^2)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=10)
plot(cv_depress2)
prediction <- predict(depress2_tree, data=job_test)
MSE = mean((prediction-job_test$depress2)^2)
#**************** Tree ****************#
library(tree)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=10)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
pruned_depress2 <- prune.tree(depress2_tree, best=4)
plot(pruned_depress2)
text(pruned_depress2)
prediction <- predict(pruned_depress2, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=10)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
pruned_depress2 <- prune.tree(depress2_tree, best=4)
plot(pruned_depress2)
text(pruned_depress2)
prediction <- predict(pruned_depress2, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=10)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
pruned_depress2 <- prune.tree(depress2_tree, best=4)
plot(pruned_depress2)
text(pruned_depress2)
prediction <- predict(pruned_depress2, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=20)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
pruned_depress2 <- prune.tree(depress2_tree, best=7)
plot(pruned_depress2)
text(pruned_depress2)
prediction <- predict(pruned_depress2, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=20)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=50)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=100)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=168)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=10)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=20)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=20)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=50)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=100)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=168)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
#**************** Tree ****************#
library(tree)
set.seed(431)
depress2_tree <- tree(depress2~., data=job_train)
plot(depress2_tree)
text(depress2_tree, pretty=0)
cv_depress2 <- cv.tree(depress2_tree, K=120)
plot(cv_depress2)
prediction <- predict(depress2_tree, job_test)
MSE = mean((prediction-job_test$depress2)^2)
print(MSE)
tr <- tree(comply~., data=job_train)
plot(tr)
text(tr, pretty=0)
str(job)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), observ_num*0.75)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
set.seed(1234)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
set.seed(12348048)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
train
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), observ_num*150)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), 150)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
set.seed(12348048)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), 168)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
set.seed(12348048)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), observ_num*0.75)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
set.seed(12348048)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), 503)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
set.seed(12348048)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), 450)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
set.seed(12348048)
train = job_train[-1]
tr <- tree(comply~., data=train)
plot(tr)
text(tr, pretty=0)
#****************Data Setup****************#
set.seed(1234)
job <- read.csv("jobs.csv", header = TRUE)
job <- data.frame(job[-c(1,16)])
job <- job[!(job$treat == 1 & job$comply ==0),]
job$treat <- as.factor(job$treat)
job$comply <- as.factor(job$comply)
#Setting Train and Test data set
observ_num = nrow(job)
trainindex <- sample(1:nrow(job), 450)
job_train <- job[trainindex, ]
job_test <- job[-trainindex, ]
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
meanjob_rf$mse
plot(job_predicted, col='red' )
plot(job_test$depress1)
plot((job_predicted-job_test$depress1)^2)
importance(job_rf)
plot(job_predicted, col='red' )
dot(job_test$depress1)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
plot(job_predicted, col='red' )
points(job_test$depress1)
plot((job_predicted-job_test$depress1)^2)
importance(job_rf)
varImpPlot(job_rf)
type(job_predicted)
typeof(job_predicted)
class(job_predicted)
job_predicted
job_predicted[0]
job_predicted ==1
getINDEX(job_predicted, value ==1.636350 )
which(job_predicted==1.636350)
which(job_predicted==1.863837)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
plot(job_predicted, col='red' )
points(job_test$depress1)
segments(y0=job_predicted, y1=job_test$depress2)
length(job_predicted)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
points(job_test$depress1)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
plot((job_predicted-job_test$depress2)^2)
importance(job_rf)
varImpPlot(job_rf)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
plot((job_predicted-job_test$depress2)^2)
importance(job_rf)
varImpPlot(job_rf)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
title(main="Predicted depress2 and Actualy Depress2")
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
plot((job_predicted-job_test$depress2)^2)
importance(job_rf)
varImpPlot(job_rf)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
title(main="Predicted depress2 and Actualy Depress2")
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
MSE <- job_predicted-job_test$depress2)^2
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
title(main="Predicted depress2 and Actualy Depress2")
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
MSE <- (job_predicted-job_test$depress2)^2)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
title(main="Predicted depress2 and Actualy Depress2")
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
MSE <- ((job_predicted-job_test$depress2)^2)
plot(MSE)
title(main="RF Depress2 Prediction MSE")
importance(job_rf)
varImpPlot(job_rf)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
title(main="Predicted depress2 and Actualy Depress2")
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
RSS <- ((job_predicted-job_test$depress2)^2)
plot(RSS)
title(main="RF Depress2 Prediction RSS")
MSE = mean(RSS)
Paste("RF Depress2 Prediction MSE", MSE)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
MSE <- mean((job_predicted-job_test$depress2)^2)
MSE
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
title(main="Predicted depress2 and Actualy Depress2")
points(job_test$depress2)
segments(x0=x, y0=job_predicted, x1=x, y1=job_test$depress2)
RSS <- ((job_predicted-job_test$depress2)^2)
plot(RSS)
title(main="RF Depress2 Prediction RSS")
MSE = mean(RSS)
paste("RF Depress2 Prediction MSE", MSE)
importance(job_rf)
varImpPlot(job_rf)
#****************Random Forest****************#
library(randomForest)
set.seed(1234)
job_rf <- randomForest(depress2~., data=job_train, importance=TRUE, mtry=5)
job_predicted <- predict(job_rf, job_test)
x <- seq(1,length(job_predicted), by=1)
plot(job_predicted, col='red' )
